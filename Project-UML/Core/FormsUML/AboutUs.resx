<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>